大喜利茶屋の徹底分析と短歌版サービス開発のための
AI指示書
1. 大喜利茶屋の概要
大喜利茶屋は、リアルタイムで提示されるお題に対して4分間でボケ（面白い回答）を投稿し、参加者同士で
投票して順位を競うオンライン大喜利サイトです 。主要な特徴は以下の通りです。
時間制の企画:  「夜の茶屋」は毎日22時開始、「昼の茶屋」は土日14時開始（平日14時は季節の茶
屋）で、各回ともお題発表から 4分間 で回答を投稿し、その後に投票フェーズへ移行します 。投稿
受付中は回答を何度でも上書き可能で、4分経過後に自動で投票画面に切り替わります 。
長考型の企画:  「日めくり」は毎日午前11時にお題が更新され、 24時間投稿期間→24時間投票期間→
結果発表 のサイクルで進行します 。投稿・投票・結果発表が同時並行で進み、投票画面では右下
に必要投票数が表示されます 。参加者は提示された複数のお題の中から1つ選んで1作品のみ投稿
でき（期間内であれば編集可）、翌日の投票で面白いと思った全ての回答に投票できます 。
投票システム:  持ち票（各ユーザーが投票できる票数）は 「参加者数÷10」を四捨五入 して決定され
ます（例：参加者41人なら持ち票4票） 。持ち票は複数の回答に振り分け可能で、一つの回答に最
大3票まで入れることができます 。投票は1回クリックで1票、2回クリックで2票、3回目でリセッ
トというUIで直感的に行えます。また 投稿した回の投票は必須 であり 、投票しないまま終了した
場合その回のポイントにペナルティが科されます 。意図的な無投票が繰り返されるとアカウント
停止など厳しい措置も明記されています 。
部屋分割と決勝戦:  夜の茶屋・昼の茶屋では参加人数が 80人を超えると自動的に部屋が分割 されます
。各イベントは通常5問ずつお題が出題され、その合計得票数の 上位20% の参加者だけが6問目の
決勝戦に進出する仕組みです 。決勝戦では投稿していない参加者も投票に参加でき、投票者数に
応じた 票の補正（重みづけ） が加えられるルールが採用されています 。最終的に6問全て終了後、
決勝まで含めた総合結果が表示されます 。
ランキングとシーズン制:  日めくり・昼の茶屋・夜の茶屋各イベントで上位に入賞するとメダル（1
位〜3位：金・銀・銅メダル、上位10%：入賞メダル）が付与され 、それに応じたポイントがユー
ザーの累計ポイントに加算されます 。夜の茶屋は 100回ごとにシーズン切り替え となり 、ラン
キングページではシーズン別にポイントを閲覧できます 。過去シーズンの記録も保存され、プロ
フィール画面でシーズンごとの成績や獲得メダル数を振り返ることが可能です 。
匿名性と公平性:  投稿および投票時には他ユーザーの名前や回答内容、途中経過の得票状況が見えな
いよう非公開化されており、純粋な内容の面白さで競えるよう 公平性が確保 されています 。この
匿名・非公開システムにより、既存票数によるバイアスなく公正な評価が行われています 。
お題投稿・ご意見箱:  ログインユーザーは「お題投稿」ページから新しいお題（テーマ）を投稿でき
ます。投稿されたお題は運営側で内容確認された後、ストックに追加されランダムに採用される仕組
みです。サイト上には運営へのフィードバック用に「ご意見箱」も設置されており、ユーザーが不具
合報告や要望を送信できます。1
• 
1
2
• 
3
4
5
• 
6
7
8
9
10
• 
11
12
13
14
• 
15
16 17
18
17
• 
19
20
• 
1\nルールの厳格化:  公序良俗に反する内容や著作権を侵害する可能性のあるお題（特に画像のお題）、
「特定の個人・団体・組織の名誉を傷つける」内容の投稿は禁止されています 。また、不正防止
のための監視体制が敷かれており、 複数アカウントを用いた自作自演の投票 や外部ツール・AIによる
自動回答投稿も禁止されています 。サイト内では不正投票監視ボットが稼働しており、発覚した
場合は原則100日間の利用停止（初犯）など厳しい措置が自動適用される仕組みです 。
2. 大喜利茶屋のユーザー体験（UX）
2.1 参加フロー
アカウント登録／ログイン:  利用にはメールアドレスとパスワードによるアカウント登録が必要です。
登録後はログインしてサービスを利用します（iOSのFaceIDやブラウザの自動入力機能でログイン情
報を素早く入力可能）。
イベント参加:  各イベント開始時刻になると、サイトのメニューバーに該当する部屋（夜の茶屋・昼
の茶屋・季節の茶屋・日めくり）のリンクが表示されます 。ユーザーがリンクをクリックすると
お題が画面に表示され、画面上部には 4分間のタイマー がカウントダウンを開始します。ユーザーは
テキスト入力欄に回答（ボケ）を投稿します（投稿中は残り時間が表示され、時間内であれば何度で
も回答内容を編集・上書き可能）。
投票:  投稿フェーズの4分間が終了すると、画面は自動的に投票画面へ切り替わります 。投票
フェーズでは他の参加者の匿名化された回答一覧が表示され、ユーザーは自分の持ち票を面白いと思
う回答に配分します。画面右下に残り 持ち票数 と投票残り時間 がリアルタイム表示され 、持ち票
が0になるまで投票を行うと「投票完了」ボタンがアクティブになります。1つの回答に複数票入れる
ことも可能で（最大3票/回答）、クリック操作で票数を増減できます 。持ち票を使い切らずに時
間切れになった場合、自身のポイントに減点ペナルティが科されます 。このペナルティを避け公
平性を保つため、 投稿したユーザーは必ず投票まで行うこと が求められます 。なお投票のみ目的
でイベントに参加することも可能です 。投票忘れ防止策として、未投票の投稿がある場合はサイ
ト上部に注意喚起の「お知らせ」が表示され、投票を完了するまで次のラウンドの投稿画面へ進めな
い仕組みになっています 。
結果:  投票時間が終了すると、短い集計を挟んで結果発表画面に切り替わります。そのラウンドの全回
答が得票数順に順位付けされて表示され、自分の回答には背景色などでハイライトが付きます。夜の
茶屋・昼の茶屋では通常5問実施後に一旦 途中結果 （総合順位中間発表）が表示され 、その時点で
上位20%に入った参加者のみが最終ラウンドである6問目の決勝戦に進出します 。決勝戦実施後、
全6問の総合結果が表示され、各ユーザーの最終順位・得票数・得点（標準偏差を用いたスコア換
算）などが一覧で確認できます。結果発表画面では入賞ライン（上位○%）が明示され、該当者には
メダルアイコンが表示されます。各回答はクリックすると個別ページが開き、回答者名（匿名ID）・
回答内容・得票数・得点が表示されます。
ポイント・メダル反映:  ラウンド終了後、各ユーザーのメダル獲得状況およびユーザーポイントへの
加算は即座に行われます。獲得したメダルと増加ポイントはユーザープロフィールに反映され、当日
中にサイトのランキングページにも更新されます 。特に総合結果上位3位までに入賞したユーザー
には金・銀・銅メダルが、上位10%以内には入賞メダルが付与され、ポイントも高得点が与えられま
す 。ランキングページではリアルタイムで当日の結果が集計されており、翌日には日めくり含め
全イベントのポイントが加算された最新ランキングを閲覧できます。• 
21
22
23
1. 
2. 
24
3. 25
26
7
9
27
8
28
4. 
29
12
5. 
15
15
2\n2.2 UI/UXデザイン
シンプルなトップページ:  トップページにはサイトロゴと簡単なキャッチコピーが配置され、ヘッ
ダーのメニューバーから各企画（夜の茶屋・昼の茶屋・季節の茶屋・日めくり）、ランキング、お題
投稿、ルール、問い合わせ等のページに遷移できます 。初見ユーザーにも分かりやすいシンプル
なナビゲーション構成です。
レスポンシブ対応:  PC・タブレット・スマートフォン等、様々なデバイスで快適に利用できるようレ
スポンシブデザインが採用されています。画面サイズに応じてレイアウトが最適化され、スマホ縦持
ちでも投稿・投票がしやすいUIを実現しています。
リアルタイム更新:  投稿フェーズの残り時間カウントダウンや、投票フェーズでの残り持ち票・残り時
間の表示、結果発表時の順位変動など、リアルタイム性が要求される要素はWebSocket等を用いた
サーバーとの双方向通信で実装されています。ユーザーの操作なしでも情報が自動更新されること
で、臨場感のあるリアルタイム対戦が可能となっています。
ランキング・シーズン表示:  ランキングページでは現在シーズンの総合ポイント順位が表示され、ド
ロップダウンやタブで過去シーズンのランキングに切り替えることもできます 。各ユーザーのラ
ンキング欄には獲得メダル数や直近の成績が表示され、長いランキング表は折りたたみ可能なセク
ションで区切られて閲覧性を向上させています。
2.3 ゲーミフィケーション
メダル／ポイント:  各イベントごとに順位に応じたメダルとユーザーポイントの付与があることで、
ユーザーの競争心を刺激します 。メダルはプロフィール画面やランキング上で視覚的に確認で
き、集めるコレクション要素にもなっています。ポイントはランキング順位に直結し、参加や投票と
いったあらゆる行動で少しずつ蓄積されるため、イベントに積極的に関わる動機付けとなります
。
茶事（実績アンロック）:  一定の条件を達成すると「◯◯の茶事を達成！」といった実績バッジが解
除される仕組みがあり、長期的なモチベーション維持につながっています 。例えば「初投稿達
成」「入賞10回達成」「特定の難しいお題で入賞」など様々な実績が存在し、プロフィールに表示さ
れます。これにより単に順位を競うだけでなく、個々の目標を持ってプレイする楽しさが提供されて
います。
イベントバリエーション:  レギュラー開催の夜・昼・日めくり以外にも、新規ユーザー限定の「新人
戦」や長時間に渡り大量のお題に答える「○○問答」シリーズ、より短い持ち時間で行うスピード勝
負系、さらには 長文大喜利 やお題そのものを投稿する企画まで、数多くの特殊イベントが用意されて
います 。イベントごとに回答時間や部屋分割条件、出題数などルールが変わり、ユーザーに
新鮮な体験と挑戦の場を提供しています。
3. 短歌版アプリの企画要件
大喜利茶屋の仕組みをベースに、 短歌 の投稿・投票サービス「短歌茶屋」（仮称）を開発します。短歌は
五・七・五・七・七の五行から成る31音の日本伝統定型詩であり、笑いや機知を競う大喜利とは異なり繊細
な表現や情緒を評価する文化です。本サービスではリアルタイム性とゲーム性を活かしつつ、短歌ならではの
体験を提供することを目指します。以下に企画コンセプトおよび詳細要件をまとめます。開発者は本仕様に基
づいてシステム設計・実装を行ってください。• 
30
• 
• 
• 
17
• 
15
31
• 
32
• 
33 34
3\n3.1 全体構成
サービス名（仮称）：  短歌茶屋 / Tanka-Chaya 
対象デバイス：  PC / スマートフォン / タブレットのWebブラウザ（マルチプラットフォーム対応） 
技術スタック例：  フロントエンドはReactなどSPAフレームワーク、リアルタイム通信はWebSocket
もしくはSocket.IO。バックエンドはNode.js＋ExpressまたはPython（FastAPI）などを使用。データ
ベースはPostgreSQL等のリレーショナルDBを採用し、 ユーザー情報 ・短歌投稿 ・投票履歴 ・ポイン
ト・イベント情報 などを保存。CI/CDにはGitHub Actionsを用い、Linuxサーバ上へのクラウドデプロ
イを想定。 
スケーラビリティ：  同時参加者数が数百〜数千人規模に増えてもスムーズにリアルタイム処理が行え
るように設計します。WebSocketサーバはスケールアウト可能な構成（例：Nodeクラスタや分散
メッセージブローカーの導入）とし、データベースもリードレプリカの追加や適切なインデックス設
計、キャッシュ層（Redis等）の活用で高負荷に耐えられるようにします。 
セキュリティ：  ユーザーパスワードは安全なハッシュアルゴリズムで保存し、通信はHTTPS（TLS）
で暗号化します。CSRFトークンの導入や入力内容のエスケープによるXSS対策などWebセキュリティ
基本要件を満たします。不正な投稿・投票を防ぐため、Rate Limitの実装や異常検知のログ監視を行
います。特にボットによる連続投稿・自動投票は検知してブロックする仕組みを用意します。 
法令・規約対応：  ユーザー投稿コンテンツに関して著作権やプライバシーへ配慮し、第三者の権利を
侵害する短歌は禁止します。不適切表現を自動検出するフィルタリング機能（NGワード辞書照合＋大
規模言語モデルによるコンテンツチェックの併用）を実装し、公序良俗に反する投稿は事前に警告・
ブロックします。また利用規約とプライバシーポリシーを明示し、ユーザーに遵守させます。 
サポート言語：  基本的には日本語UIですが、設定により英語表示にも切り替え可能な多言語対応を念
頭に置きます。内部実装として文言は言語リソースファイルに分離し、将来的な他言語展開に備えま
す。
3.2 企画・ゲーム設計
イベント種別:
歌会の夜:  毎日22時開始。 短歌投稿4分＋投票フェーズ のサイクルで行う短考型（リアルタイム型）の
企画です。夜間はユーザーが集まりやすい時間帯であるため、就寝前の参加を想定しています（大喜
利茶屋の夜の茶屋と同時間帯） 。 
歌会の昼:  土日14時開始の短考型企画です。休日の日中に開催し、平日14時には季節のテーマに特化
した「季節の歌会」を同形式で実施します（季節の茶屋に相当） 。昼間の開催により学生や休日
利用者の参加を促します。 
日めくり短歌:  毎日午前11時にお題が更新される長考型の短歌企画です 。お題は例えば複数提示
され（季語やテーマ別に数題）、参加者は その中から1題を選んで1作品のみ 投稿できます。一つのお
題につき投稿期間は24時間、続いて投票期間が翌日の同時刻から24時間、さらにその翌朝に結果発表
というサイクルで進行します 。期間内であれば投稿の編集・上書きが可能で、投票時には他の投
稿を閲覧し 好きなだけ投票 できます（最低投票数は「参加者数÷10」で算出） 。日めくりでは
ユーザーの生活リズムに合わせてじっくり推敲・鑑賞できる場を提供します。
練習部屋／特殊企画:  ユーザーが自由に短歌を投稿して練習できる部屋や、期間限定・条件限定の特殊
イベントも将来的に導入可能なよう拡張性を確保します。例えば初心者限定戦、長文短歌戦（字数制
限を緩和）、三行短歌戦（型を崩した自由律短歌）など、多彩なバリエーションに対応できるように
します 。• 
• 
• 
• 
• 
• 
• 
• 
1
• 
1
• 3
35
6
• 
33
4\nお題の扱い:
お題（テーマ）は管理者およびユーザーから投稿されたストックからランダムに出題します。短歌で
は季語や題材が評価のポイントとなるため、データベース上でお題に 季節タグ や感情・情景カテゴリ
を付与し、バランスよく様々なジャンルのお題が出題されるよう工夫します。また、将来的に画像付
きのお題（写真を見て詠む短歌など）にも拡張できるよう、お題テーブルの設計はテキスト以外のリ
ソースも紐付け可能な構造にしておきます。
お題はイベント開始時に自動表示されます。日めくり短歌では複数お題から選択可能ですが、夜/昼の
歌会では各ラウンドごとにサイトが ランダム抽選 した単一のお題が全参加者に提示されます。お題内
容は短歌創作を促すような一言フレーズや写真（将来拡張）とし、即興性と創造性を引き出します。
投稿フェーズ:
各ラウンドの投稿時間は基本 4分間 （長考型の日めくりでは24時間）とします 。投稿フォームに
は五行入力用のUIを用意し、短歌の五・七・五・七・七の 音数ガイド を表示します。各行の入力欄に
は目安となる文字数を表示し、5/7文字を超過または不足している場合に警告を出すバリデーションを
設けます（ただし厳密に31音でなくても投稿自体は可能とし、あくまでガイドラインとして表示）。
これは型にとらわれすぎず創造性を尊重するためです。
投稿は 匿名 扱いで行われ、投稿締切までは他の参加者に内容が見えません 。投稿者自身のみ編集
画面で自分の短歌を推敲できます。制限時間内であれば投稿内容を何度でも上書き可能であり、タイ
マーがゼロになった時点で 最新の投稿内容 が確定されます （時間内に投稿がなかった場合は棄権
扱い）。
投稿時には禁止ワードチェックや他作品からの盗用検知を行います。不適切な単語が含まれる場合は
即座に警告し、必要なら投稿できないようにします。AI生成文の検知も試み、明らかに人間離れした
投稿が多発する場合には確認フラグを立てるなどして不正を防止します。
投票フェーズ:
投稿締切後、自動で投票画面に遷移します 。短考型イベントの投票時間は 参加者数に応じて可変
とし、「基本時間30秒＋参加者×3秒」程度の目安で動的に設定します（人数が多いほど投票対象が
増えるため延長）。画面右下に残り時間と自身の持ち票数が表示されます 。持ち票数は 参加者数
÷10（四捨五入） で決定し 、例えば参加者が50人なら持ち票5票となります。持ち票は複数の短
歌に自由に配分でき、一つの短歌に最大3票まで投じることができます 。投票UIはクリックで票数
を割り当てる形式（1クリック=★1、2クリック=★2、3クリック=リセット）を採用し、ユーザーが直
感的に操作できるようにします。
投票未完了ユーザーへの対策:  投票時間終了時に持ち票を使い切っていないユーザーには、自作品の得
点から減点ペナルティを課します 。さらに、連続して投票を怠ったユーザーにはアカウント停止
などの措置が取られる可能性がある旨を明示し 、投票参加を促します。サイト上部には「未投票
のお題があります」といった注意喚起も表示し、投票を完了しないと次ラウンドに進めない仕組みで
投票忘れを防止 します 。
部屋分割と決勝進出:  もし1イベントの参加者が80名を超えた場合、大喜利茶屋と同様にサーバが自動
で参加者を分割し、部屋あたりの人数を抑えます 。さらに公正を期すため、 5ラウンド目終了時点
で各部屋ごとに上位20%に入ったユーザーのみが決勝戦に進める仕組みを導入します 。決勝戦用
に新たな部屋を作成し、選出メンバーで最終ラウンド（6問目）を戦います。決勝では投票者数に応じ• 
• 
• 2
• 19
36
• 
• 36
26
6
7
• 
9
10
28
• 
11
12
5\nたスコア補正（例：決勝の票は通常ラウンドより高配点になる）が加わるルールとし 、大逆転も
可能なエキサイティングな最終結果を演出します。
結果フェーズとランキング:
投票終了後、集計を経て結果発表画面を表示します。各短歌の 順位・作者（匿名ID）・本文・得票
数・得点 が一覧化され、メダル獲得者にはアイコンが付きます。得点計算は得票数と投票者数を考慮
した 標準偏差ベースのスコア を採用し、母集団による有利不利を軽減します（大喜利茶屋でも同様の
スコアリングが用いられています）。各短歌の個別ページでは短歌ごとのOGP画像を生成し、作品
カードとしてSNS共有可能にします。これにより、自分の詠んだ短歌をSNS上にビジュアル付きで簡
単に紹介できるようになります。
決勝戦結果:  決勝が行われた場合は、最終結果発表の際に決勝進出者の成績に ボーナス補正 を加えた
上で総合順位を表示します（例：決勝進出者には+○点を加算）。この補正により決勝進出自体の価
値を高め、僅差の場合は決勝進出者が上位になるよう配慮します。最終結果で同点1位が複数発生した
場合はサドンデス（決勝戦終了後に1問の延長戦）を行うか、運営判断で同率優勝として扱います。
ランキングへの反映:  各イベント結果から算出されたポイントは即時にユーザーの累計ポイントへ加
算され、サイト内ランキングページに反映されます。ランキングページでは「当日獲得ポイント順」
「累計ポイント順」「シーズン別」など切り替え表示が可能です。特に夜の歌会（夜の茶屋）は 100
回で1シーズン区切り とし、シーズンごとにランキングをリセットします 。過去シーズンのランキ
ングデータも保存し、閲覧ページを用意します。上位入賞者（例:  各イベント総合1〜3位）には金・
銀・銅メダル、上位10%以内には入賞メダルが付与され 、これらもランキング画面やプロフィー
ル画面で確認できます。なお、 投票ボーナス として投票をしっかり行った参加者には自作品に数点の
加算を行います（大喜利茶屋では投票完了で自作品に+2〜3点 。短歌茶屋でも同様に投票促進の
ため導入）。
ユーザー管理機能:
認証・プロフィール:  メールアドレス登録によるユーザーアカウント作成、ログイン、パスワードリ
セット機能を実装します。各ユーザーは表示名（重複不可）、アイコン画像、自己紹介文を設定可能
とし、プロフィールページでは累計ポイント・獲得メダル数・達成済み実績（後述）・過去の投稿作
品一覧などを閲覧できます。
参加履歴:  ユーザープロフィールから、自分が過去に参加したイベントの履歴（日時、お題、順位、得
票、作品内容など）を振り返ることができます。短歌の投稿内容はアーカイブされ、他ユーザーから
は匿名ID付きで閲覧可能とします（ランキング上の匿名IDから作品ページに遷移できる）。ただし、
ユーザー本人のみが自分の投稿を「短歌帖（マイページ）」で一覧管理できます。
不正対策:  同一人物による複数アカウント作成は禁止とし、ユーザー登録時やログイン時にIPや端末情
報から重複を検知した場合、管理者に通知します。明らかなサブアカウントや規約違反行為が判明し
た場合、運営者は当該アカウントを停止・削除できる管理機能を持ちます 。また過度な無投票や
短期間での不自然な連続投稿なども検知し、悪質な場合は自動ペナルティを課します。
お題投稿・運営支援:
ユーザーからのお題提供:  一定の実績を持つユーザー（例：累計○ポイント以上、メダル○個以上獲
得など）に対して、お題投稿権限を付与します。お題投稿フォームではテキスト（将来的に画像
URL）とカテゴリタグ等を入力可能とし、投稿されたお題は運営側の承認待ちステータスになりま
す。運営者は管理画面で新規お題を確認し、不適切なものや既出と重複するものを除外した上で承認13
• 
• 
• 
37
15
38
• 
• 
• 
23
• 
6\nします。承認されたお題はお題ストックに追加され、日めくりや各イベントでランダムに出題される
ようになります。
運営者用ダッシュボード:  管理者向けに、サービス全体を監視・管理するためのバックエンドツール
を提供します。具体的には以下の機能を含みます:
ユーザー一覧・検索・詳細（メール認証状況、累積ポイント、違反警告数など表示）。
投稿作品の閲覧・検索・削除機能（違反作品の強制削除やユーザーへの警告発出）。
お題投稿の承認／拒否管理（ユーザー投稿お題の一覧と承認ボタン、却下理由入力など）。
通報内容の閲覧・対応（他ユーザーからの通報があれば内容確認し、警告・停止など対応）。
システムログ閲覧（サーバエラーログ、不正検知ログなどを参照可能に）。
イベント設定編集（将来的なイベント種追加や開催時間変更を反映できる設定UI）。
禁止事項チェック:  投稿短歌およびユーザー投稿お題に対しては、自動モデレーションを行います。
NGワードリストに基づくフィルタリングに加え、AIテキスト分類器で差別・ヘイト・卑猥な内容を検
知した場合は即座に管理者にアラートを上げ、必要なら投稿をブロックします。大喜利茶屋と同様に
、特定の個人や団体を誹謗中傷する内容、他作品からの盗用は厳禁とし、発覚次第厳正に対処し
ます。
UX向上と追加機能:
実績システム（茶事）：  ユーザーの継続利用を促すため実績解除機能を実装します。例として「初め
て短歌を投稿した」「5日連続参加した」「特定の季語を詠み込んだ短歌で入賞した」等の条件を多
数用意し、達成時にプロフィールにバッジを表示します。これら実績（茶事）はユーザーの目標設定
に繋がり、ゲーム的なコレクション要素となります。
SNS共有機能:  短歌の結果表示ページからワンクリックでSNS投稿用の画像を生成・ダウンロードでき
るようにします。短歌本文、作者名（匿名ID）、順位・得票などをデザインした画像カードを生成
し、Twitter（X）等にシェアする際に視覚的に見栄えするようにします。これによりサービスの露出
拡大とユーザー自身の創作発信を支援します。
通知機能:  ユーザーが希望すれば、イベント開始前や投稿締切前、結果発表時などにメール通知や
プッシュ通知を受け取れるようにします。例えば「まもなく22時、夜の歌会が始まります！」といっ
たリマインドや、自分の投稿した短歌の結果が出た際に知らせる通知を送ります。
AIモデレーション補助:  前述の不適切表現検知に加え、投稿内容の重複チェック（他ユーザーと酷似
した短歌が投稿されていないか）をAIでサポートします。さらに、運営者が行う審査の効率化のた
め、違反の疑いがある投稿を自動でハイライト表示するなどの機能も提供し、スムーズなサービス運
営を実現します。
3.3 システム要件（非機能）
性能:  WebSocketによるサーバ〜クライアント間の通信遅延はできるだけ低く抑え、投稿・投票のリ
アルタイム性を損ないません。目安として、サーバからクライアントへのブロードキャストは300ms
以内で届くよう最適化します。DBクエリや集計処理もインデックス利用や非同期処理で高速化し、結
果発表など大量データ処理も数秒以内に完了することを目指します。
可用性:  サービスは基本的に24時間365日稼働し、特に毎日決まった時間に多数ユーザーがアクセスす
るため、その時間帯のダウンタイムは厳禁です。デプロイやメンテナンスはイベント実施時間を避• 
• 
• 
• 
• 
• 
• 
• 
39
• 
• 
• 
• 
• 
• 
7\nけ、ローリングアップデートで無停止で行うようにします。万一サーバ障害が発生した場合も、複数
台構成やフェイルオーバーによりサービス継続性を担保します。
拡張性:  本システムは短歌だけでなく将来的に俳句版や川柳版など詩型の違うサービス展開も検討し
ています。そのため、イベント種別（夜の部・昼の部・日めくり等）や投稿フォーマット（行数・文
字数）などは 設定ファイルやDBで管理 し、コードを修正せずに追加・変更できるように設計します。
例えば「俳句茶屋」を開発する際は5・7・5の三行入力に切り替え、新たなイベント種を定義ファイ
ルに追加するだけで対応できることが理想です。
テスト:  ユニットテストと統合テストを充実させます。特に投票ロジック（票数計算、持ち票配分）、
部屋分割アルゴリズム、ポイント計算（メダル加点・投票ボーナス等）、音数チェック（5-7-5-7-7判
定）の各機能は自動テストで正しさを検証します。また、多人数参加時のパフォーマンステスト（負
荷試験）も行い、想定ユーザー数で問題なく動作するか確認します。
監視:  サーバの稼働状況（CPU使用率、メモリ、ネットワーク帯域）やWebSocketの接続数、メッ
セージ処理遅延を監視する仕組みを導入します。投票操作や結果計算に不正がないかログを解析する
監視ジョブも組み込みます。不具合や障害が発生した場合は管理者に通知が飛ぶようにし、迅速な対
応が取れるようにします。
4. AI向け開発指示のサンプルプロンプト
以下は、上記の分析と要件を踏まえて 生成系AIに開発を依頼するためのプロンプト例 です。大喜利茶屋の知見
を参考資料として引用しながら、短歌茶屋のシステム要件を具体的に指示しています。このプロンプトを
Claude Code 2.0等のAI開発者に入力し、設計から実装まで対応してもらう想定です。
目的:  大喜利茶屋の仕組みを参考に、リアルタイムで短歌（五・七・五・七・七形式）を投稿・評価できる
Webサービス「短歌茶屋」を開発したい。ユーザーは提示されたテーマに沿って短歌を投稿し、参加者同士
で投票してランキングを競うゲーム性を持たせる。
参考資料:  大喜利茶屋では1ラウンドあたり 4分間の投稿→投票 というサイクルを採用している 。持ち
票数は 参加者数の1割（10%） で決まり、全て使い切る必要がある 。参加者が80人を超える場合は自動的
に部屋を分割し、5問目終了後に 上位20%のみ決勝進出 する仕組みになっている 。投稿・投票時には他者
の回答や得票が見えず 公平性 が担保されている 。イベント開催時間は夜の部が毎日22時、昼の部が土日
14時に設定され 、日めくり（長考型）は毎日11時にお題更新・投稿24時間・翌日投票24時間・さらに翌
日結果発表というサイクルで進行する 。高順位者にはメダルが付与され、夜の茶屋100回ごとにシーズン
が切り替わる 。
要求機能:
イベント実装:  夜の歌会・昼の歌会・季節の歌会・日めくり短歌会の4種類のイベントをスケジュール
通り自動開催する。各イベントで定められた開始時刻になると参加受付を開放し、お題を提示する。
投稿インターフェース:  五行入力欄（五・七・五・七・七）を用意し、各行に目安の文字数を表示して
短歌のリズムをガイドする（厳密な音数でなくても投稿は可能だが警告を出す）。投稿時間中はユー
ザーは何度でも回答を編集・上書きでき、投稿締切時に最新の内容を確定させる。投稿後は自動で投
票画面に切り替わる。• 
• 
• 
40 2
6
12
19
1
35
41
• 
• 
8\n投票機能:  持ち票数は 参加者数÷10（四捨五入） で算出し 、持ち票を複数の短歌に自由配分でき
るUIを実装する（1回答に最大3票まで投入可能 ）。投票画面では全回答が匿名表示され、ユー
ザーは残り票数が0になるまで投票可能。 投票完了しないと次のラウンドに進めない 仕様とし、未投
票ユーザーには注意喚起や減点ペナルティで対応する 。投票時間は参加人数に応じて延長される
仕組み（例: 30秒 + 3秒×参加者数）。
部屋分割と決勝:  参加者が80人を超える場合、自動で部屋を分割し各部屋の人数を抑える 。5ラウ
ンド目終了時点で各部屋上位20%のみが決勝戦に進出し 、決勝戦用に新しい部屋を作って6ラウン
ド目を実施する。決勝では非進出者も含め全員が投票に参加でき、投票者数に応じた 得点補正 を加え
る 。6ラウンド終了後に総合結果を集計し、順位・得票・得点を表示する。
結果表示と共有:  結果発表画面では各短歌の順位・作者ID・内容・得票数・スコアを一覧表示し、上
位者にメダルを表示する。各短歌はクリックで個別ページを開き、OGP画像を生成して SNS共有 でき
るようにする。スコア算出は得票数の平均と標準偏差を用いて、参加者数が異なる回でも公平になる
ようにする（必要に応じて調整）。
日めくりモード:  日めくり短歌会では提示された複数のお題からユーザーが1つを選択し、 24時間以内
に1作品のみ投稿可能とする 。投稿期間終了後、翌24時間は投票期間とし、さらに翌日に結果を発
表する。同時に次のお題も更新され、日々連続して進行する仕組みとする。日めくりでは投票時に必
要最低投票数を表示し、 一つの回答に最大3票 まで入れられるようにする（大喜利茶屋の日めくり仕
様に準拠） 。
ユーザーアカウント・プロフィール:  ユーザー登録（メール認証）、ログイン、パスワードリセット機
能を実装する。プロフィール画面で表示名、累計ポイント、獲得メダル、実績解除状況、過去投稿一
覧を閲覧できるようにする。過去の投稿作品は匿名ID付きで公開し、作者本人のプロフィールでは自
作品として一覧できる。
お題投稿機能:  条件を満たした一般ユーザーがお題を提案できるフォームを設ける。投稿されたお題
は管理者が確認・承認し、承認済みお題ストックからイベント時にランダム出題されるようにする。
お題データはカテゴリや季節タグとともにDB管理する。
運営管理機能:  管理者用のダッシュボードを作成し、ユーザー一覧・検索、投稿された短歌やお題の
閲覧・削除、違反報告対応、ユーザーBAN処理などが行えるようにする。違反検知ボットのレポート
やログ監視結果も閲覧でき、手動でペナルティ付与やアカウント停止ができるようにする。
不正対策:  複数アカウントによる自作自演投票やAI自動生成投稿を禁止し、不審な挙動を検知したら自
動で警告・排除する機能を実装する 。例えば短時間で大量の投稿や同一IPからの多重投票があれ
ばブロックし、管理者に通知する。NGワードフィルターとAIテキスト分類で不適切な投稿は事前にブ
ロックする。
ランキング・ポイント:  各イベント結果からポイントを算出し、ユーザーの累計ポイントを更新す
る。ランキングはシーズン制を導入し、 夜の歌会100回で1シーズン としてポイントリセット 。ラ
ンキングページで現行シーズンと過去シーズンの順位を閲覧できる。上位入賞者には金・銀・銅・入
賞メダルを付与し 、メダル数もランキングに反映する。 投票ボーナス として投票を完了したユー
ザーの自作品に+2点加算する（ゲーム性維持のため） 。• 6
7
9
• 11
12
13
• 
• 
35
7
• 
• 
• 
• 
22
• 
41
15
38
9\n実装上の制約:
リアルタイム通信:  WebSocket（またはSocket.IO）を用いて低遅延の双方向通信を実現すること。投
稿・投票・結果の各フェーズ遷移をサーバからクライアントに即時通知し、数百人規模でも快適に動
作するよう最適化する。
レスポンシブ対応:  モバイルファーストでUIを設計し、スマートフォンでも入力・投票がしやすいよう
にする。画面幅に応じてレイアウトを調整し、重要な情報（残り時間や持ち票など）は小さい画面で
も視認性良く配置する。
セキュリティ:  パスワードは安全にハッシュ化して保存（例：bcrypt）、API通信はHTTPSのみ対応。
XSS/CSRFの基本対策を講じ、ユーザー入力はサニタイズする。不正行為検知ロジックを組み込み、
サーバ側で重要操作（投稿・投票）のバリデーションを行う。
拡張性:  将来的に俳句版や川柳版などを追加できるよう、イベント種別やお題形式の定義を外部設定
化する。例えばイベント設定をJSON/YAMLで持ち、イベント名・開催スケジュール・投稿行数などを
変えるだけで新企画を追加可能にする。また、特別企画にも対応できる柔軟なコード構成にする。
以上の指示書を踏まえ、AIにはシステム設計書（仕様書、画面遷移図、DBスキーマ設計、API設計書など）の
作成から実装・テストまでを一貫して行ってほしい。技術スタックの最終選定やデザインガイドラインにつ
いて不明点があれば適宜質問し、必要に応じて追加の指示を求めること。
追加指示:
1.  実装（コーディング）まで対応してください。設計止まりではなく、実際に動作するアプリケーションを
完成させることを目標とします。
2.  技術スタックやライブラリの選定は指定のものを基本としますが、より最適な選択がある場合は提案の上
で採用しても構いません。
3.  開発には  Claude  Code  2.0  を利用する予定です。プロジェクト用ディレクトリを作成し、その中でビル
ド・実行して結果を確認します。適宜実行コマンドや手順も提示してください。
4. 最優先すべきは 実際に動くこと です。多少実装が簡略化されても構わないので、まずプロトタイプとして動
くシステムを完成させ、後から改善できるようにしてください。
ルール　遊び方
https://oogiri-chaya.com/serviceRule
大喜利茶屋の遊び方など｜ランゲル・ハンス
https://note.com/anagura_gram/n/n2a362e146fb2
大喜利茶屋 - 大喜利まとめサイト | 大喜利wiki - atwiki（アットウィキ）
https://w.atwiki.jp/oogirimemo/pages/4.html
守
https://www.anlp.jp/proceedings/annual_meeting/2025/pdf_dir/P7-9.pdf
home
https://oogiri-chaya.com/• 
• 
• 
• 
1 2 3 4 5 8 9 10 11 15 16 17 18 21 22 23 24 25 26 27 28 31 36 39 40
6 12 13 35 37 41
7 14 29 32 33 34 38
19 20
30
10